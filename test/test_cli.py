import pytest
from click.testing import CliRunner
from nbrb_by.nbrb_by import ref, conv, rate


@pytest.fixture
def runner():
    return CliRunner()


dates = {'01.01.2021', '01/01/2021', '01-01-2021', '01012021', '010121'}


# --------------------------------------------------------
# REF command
# --------------------------------------------------------
def test_ref_on_01072021(runner):
    result = runner.invoke(ref, "-d 01072021")
    check_value = ('+------------+---------+\n'
                   '| Date       |   Value |\n'
                   '|------------+---------|\n'
                   '| 21.04.2021 |     8.5 |\n'
                   '+------------+---------+\n')
    assert result.output == check_value


def test_ref_all(runner):
    result = runner.invoke(ref, "-all")
    check_value = ('+------------+---------+\n'
                   '| Date       |   Value |\n'
                   '|------------+---------|\n'
                   '| 01.07.1991 |   12    |\n'
                   '| 28.01.1992 |   20    |\n'
                   '| 15.06.1992 |   30    |\n'
                   '| 10.03.1993 |   60    |\n'
                   '| 20.04.1993 |   70    |\n'
                   '| 01.06.1993 |  100    |\n'
                   '| 10.07.1993 |  120    |\n'
                   '| 20.07.1993 |  140    |\n'
                   '| 12.08.1993 |  170    |\n'
                   '| 15.10.1993 |  180    |\n'
                   '| 10.11.1993 |  210    |\n'
                   '| 10.10.1994 |  300    |\n'
                   '| 20.12.1994 |  480    |\n'
                   '| 21.02.1995 |  300    |\n'
                   '| 05.05.1995 |  180    |\n'
                   '| 22.05.1995 |  144    |\n'
                   '| 21.06.1995 |   96    |\n'
                   '| 21.08.1995 |   66    |\n'
                   '| 21.03.1996 |   55    |\n'
                   '| 02.09.1996 |   35    |\n'
                   '| 25.02.1997 |   42    |\n'
                   '| 20.08.1997 |   38    |\n'
                   '| 20.09.1997 |   36    |\n'
                   '| 01.12.1997 |   40    |\n'
                   '| 19.02.1998 |   50    |\n'
                   '| 01.04.1998 |   44    |\n'
                   '| 07.05.1998 |   40    |\n'
                   '| 01.08.1998 |   38    |\n'
                   '| 01.12.1998 |   48    |\n'
                   '| 20.01.1999 |   60    |\n'
                   '| 02.03.1999 |   82    |\n'
                   '| 01.04.1999 |   90    |\n'
                   '| 25.11.1999 |  110    |\n'
                   '| 14.12.1999 |  120    |\n'
                   '| 10.01.2000 |  130    |\n'
                   '| 25.01.2000 |  150    |\n'
                   '| 21.02.2000 |  175    |\n'
                   '| 15.03.2000 |  150    |\n'
                   '| 28.03.2000 |  130    |\n'
                   '| 20.04.2000 |  110    |\n'
                   '| 22.05.2000 |  100    |\n'
                   '| 22.06.2000 |   90    |\n'
                   '| 14.09.2000 |   85    |\n'
                   '| 01.12.2000 |   80    |\n'
                   '| 21.02.2001 |   75    |\n'
                   '| 21.03.2001 |   70    |\n'
                   '| 21.04.2001 |   68    |\n'
                   '| 21.05.2001 |   64    |\n'
                   '| 04.06.2001 |   60    |\n'
                   '| 21.06.2001 |   55    |\n'
                   '| 09.07.2001 |   50    |\n'
                   '| 21.09.2001 |   48    |\n'
                   '| 15.01.2002 |   66    |\n'
                   '| 15.03.2002 |   60    |\n'
                   '| 15.04.2002 |   55    |\n'
                   '| 21.05.2002 |   50    |\n'
                   '| 17.06.2002 |   46    |\n'
                   '| 19.07.2002 |   44    |\n'
                   '| 19.08.2002 |   42    |\n'
                   '| 19.09.2002 |   40    |\n'
                   '| 21.10.2002 |   39    |\n'
                   '| 21.11.2002 |   38    |\n'
                   '| 21.03.2003 |   37    |\n'
                   '| 21.04.2003 |   35    |\n'
                   '| 21.05.2003 |   34    |\n'
                   '| 23.06.2003 |   33    |\n'
                   '| 17.07.2003 |   31    |\n'
                   '| 18.08.2003 |   30    |\n'
                   '| 22.09.2003 |   29    |\n'
                   '| 22.10.2003 |   28    |\n'
                   '| 17.02.2004 |   27    |\n'
                   '| 17.03.2004 |   25    |\n'
                   '| 17.04.2004 |   23    |\n'
                   '| 17.05.2004 |   22    |\n'
                   '| 17.06.2004 |   20    |\n'
                   '| 19.07.2004 |   19    |\n'
                   '| 23.08.2004 |   18    |\n'
                   '| 20.09.2004 |   17    |\n'
                   '| 10.03.2005 |   16    |\n'
                   '| 06.04.2005 |   15    |\n'
                   '| 05.05.2005 |   14    |\n'
                   '| 01.06.2005 |   13    |\n'
                   '| 20.07.2005 |   12    |\n'
                   '| 25.11.2005 |   11    |\n'
                   '| 01.06.2006 |   10.5  |\n'
                   '| 01.12.2006 |   10    |\n'
                   '| 01.02.2007 |   11    |\n'
                   '| 01.07.2007 |   10.75 |\n'
                   '| 01.08.2007 |   10.5  |\n'
                   '| 01.09.2007 |   10.25 |\n'
                   '| 01.10.2007 |   10    |\n'
                   '| 01.07.2008 |   10.25 |\n'
                   '| 13.08.2008 |   10.5  |\n'
                   '| 15.10.2008 |   10.75 |\n'
                   '| 12.11.2008 |   11    |\n'
                   '| 17.12.2008 |   12    |\n'
                   '| 08.01.2009 |   14    |\n'
                   '| 01.12.2009 |   13.5  |\n'
                   '| 17.02.2010 |   13    |\n'
                   '| 19.04.2010 |   12.5  |\n'
                   '| 12.05.2010 |   12    |\n'
                   '| 14.07.2010 |   11.5  |\n'
                   '| 18.08.2010 |   11    |\n'
                   '| 15.09.2010 |   10.5  |\n'
                   '| 16.03.2011 |   12    |\n'
                   '| 20.04.2011 |   13    |\n'
                   '| 18.05.2011 |   14    |\n'
                   '| 01.06.2011 |   16    |\n'
                   '| 22.06.2011 |   18    |\n'
                   '| 13.07.2011 |   20    |\n'
                   '| 17.08.2011 |   22    |\n'
                   '| 01.09.2011 |   27    |\n'
                   '| 14.09.2011 |   30    |\n'
                   '| 14.10.2011 |   35    |\n'
                   '| 11.11.2011 |   40    |\n'
                   '| 12.12.2011 |   45    |\n'
                   '| 15.02.2012 |   43    |\n'
                   '| 01.03.2012 |   38    |\n'
                   '| 02.04.2012 |   36    |\n'
                   '| 16.05.2012 |   34    |\n'
                   '| 20.06.2012 |   32    |\n'
                   '| 18.07.2012 |   31    |\n'
                   '| 15.08.2012 |   30.5  |\n'
                   '| 12.09.2012 |   30    |\n'
                   '| 13.03.2013 |   28.5  |\n'
                   '| 17.04.2013 |   27    |\n'
                   '| 15.05.2013 |   25    |\n'
                   '| 10.06.2013 |   23.5  |\n'
                   '| 16.04.2014 |   22.5  |\n'
                   '| 19.05.2014 |   21.5  |\n'
                   '| 16.07.2014 |   20.5  |\n'
                   '| 13.08.2014 |   20    |\n'
                   '| 09.01.2015 |   25    |\n'
                   '| 01.04.2016 |   24    |\n'
                   '| 01.05.2016 |   22    |\n'
                   '| 01.07.2016 |   20    |\n'
                   '| 17.08.2016 |   18    |\n'
                   '| 18.01.2017 |   17    |\n'
                   '| 15.02.2017 |   16    |\n'
                   '| 15.03.2017 |   15    |\n'
                   '| 19.04.2017 |   14    |\n'
                   '| 14.06.2017 |   13    |\n'
                   '| 19.07.2017 |   12    |\n'
                   '| 13.09.2017 |   11.5  |\n'
                   '| 18.10.2017 |   11    |\n'
                   '| 14.02.2018 |   10.5  |\n'
                   '| 27.06.2018 |   10    |\n'
                   '| 14.08.2019 |    9.5  |\n'
                   '| 20.11.2019 |    9    |\n'
                   '| 19.02.2020 |    8.75 |\n'
                   '| 20.05.2020 |    8    |\n'
                   '| 01.07.2020 |    7.75 |\n'
                   '| 21.04.2021 |    8.5  |\n'
                   '| 21.07.2021 |    9.25 |\n'
                   '+------------+---------+\n')
    assert result.output == check_value


# --------------------------------------------------------
# RATE command
# --------------------------------------------------------
@pytest.mark.parametrize("date", dates)
def test_rate_usd_on_dates(runner, date):
    result = runner.invoke(rate, f"usd -d {date}")
    check_value = ('+------------+------------+\n'
                   '| Date       |   Rate USD |\n'
                   '|------------+------------|\n'
                   '| 01.01.2021 |     2.5789 |\n'
                   '+------------+------------+\n')
    assert result.output == check_value


def test_rate_usd_on_01112021(runner):
    result = runner.invoke(rate, "usd -d 01112021")
    check_value = ('+------------+------------+\n'
                   '| Date       |   Rate USD |\n'
                   '|------------+------------|\n'
                   '| 01.11.2021 |     2.4226 |\n'
                   '+------------+------------+\n')
    assert result.output == check_value


def test_rate_rub_on_01112021(runner):
    result = runner.invoke(rate, "rub -d 01112021")
    check_value = ('+------------+------------+\n'
                   '| Date       |   Rate RUB |\n'
                   '|------------+------------|\n'
                   '| 01.11.2021 |     3.4363 |\n'
                   '+------------+------------+\n')
    assert result.output == check_value


def test_rate_all_rates_on_01112021(runner):
    result = runner.invoke(rate, "-d 01112021")
    check_value = ('+------------+----------------------+\n'
                   '| Currency   |   Rate on 01.11.2021 |\n'
                   '|------------+----------------------|\n'
                   '| AUD        |               1.826  |\n'
                   '| AMD        |               5.0735 |\n'
                   '| BGN        |               1.4434 |\n'
                   '| UAH        |               9.2263 |\n'
                   '| DKK        |               3.7949 |\n'
                   '| USD        |               2.4226 |\n'
                   '| EUR        |               2.8233 |\n'
                   '| PLN        |               6.114  |\n'
                   '| JPY        |               2.1304 |\n'
                   '| IRR        |               5.7681 |\n'
                   '| ISK        |               1.8845 |\n'
                   '| CAD        |               1.9631 |\n'
                   '| CNY        |               3.7873 |\n'
                   '| KWD        |               8.0333 |\n'
                   '| MDL        |               1.3891 |\n'
                   '| NZD        |               1.7389 |\n'
                   '| NOK        |               2.9009 |\n'
                   '| RUB        |               3.4363 |\n'
                   '| XDR        |               3.4243 |\n'
                   '| SGD        |               1.8006 |\n'
                   '| KGS        |               2.856  |\n'
                   '| KZT        |               5.6623 |\n'
                   '| TRY        |               2.5234 |\n'
                   '| GBP        |               3.3412 |\n'
                   '| CZK        |              10.9968 |\n'
                   '| SEK        |               2.8378 |\n'
                   '| CHF        |               2.659  |\n'
                   '+------------+----------------------+\n')
    assert result.output == check_value


# --------------------------------------------------------
# CONV command
# --------------------------------------------------------
def test_conv_1_usd_to_byn_on_01112021(runner):
    result = runner.invoke(conv, "1 usd byn -d 01112021")
    check_value = ('+---------------+-----------------+-----+---------------+-----------------+\n'
                   '|   Amount from | Currency from   | =   |   Amount into | Currency into   |\n'
                   '|---------------+-----------------+-----+---------------+-----------------|\n'
                   '|             1 | USD             | =   |          2.42 | BYN             |\n'
                   '+---------------+-----------------+-----+---------------+-----------------+\n')
    assert result.output == check_value


def test_conv_1_byn_to_usd_on_01112021(runner):
    result = runner.invoke(conv, "1 byn usd -d 01112021")
    check_value = ('+---------------+-----------------+-----+---------------+-----------------+\n'
                   '|   Amount from | Currency from   | =   |   Amount into | Currency into   |\n'
                   '|---------------+-----------------+-----+---------------+-----------------|\n'
                   '|             1 | BYN             | =   |          0.41 | USD             |\n'
                   '+---------------+-----------------+-----+---------------+-----------------+\n')
    assert result.output == check_value


def test_conv_1_byn_to_byn_on_01112021(runner):
    result = runner.invoke(conv, "1 byn byn -d 01112021")
    check_value = ('+---------------+-----------------+-----+---------------+-----------------+\n'
                   '|   Amount from | Currency from   | =   |   Amount into | Currency into   |\n'
                   '|---------------+-----------------+-----+---------------+-----------------|\n'
                   '|             1 | BYN             | =   |             1 | BYN             |\n'
                   '+---------------+-----------------+-----+---------------+-----------------+\n')
    assert result.output == check_value
